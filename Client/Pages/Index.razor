@page "/"
@using Model
@using System.Text.Json
@using System.Text.Json.Serialization
@using Model.DTO
@inject IHttpClientFactory Http

<PageTitle>Index</PageTitle>

<div >
    <EditForm Model="formItems" OnValidSubmit="SendForm">                    
        @foreach (var item in formItems)
        {
            switch(item.Title)
            {
                case "Date":
                    <label>
                        Date.                       
                    </label>
                    var dateRes = (IFormType<DateTime>)item.Object;
                    <InputDate class="form-control input-required" @bind-Value="dateRes.Value"></InputDate>
                    break;
                case "TextInput":
                    <label>
                        Text.
                    </label>
                    var textRes = (IFormType<string>)item.Object;
                    <InputText class="form-control input-required" @bind-Value="textRes.Value"></InputText>
                    break;
                case "RadioButton":
                    <label>
                        Radio.
                    </label>                   
                        var boolRes = (IFormType<bool>)item.Object;
                    <div>                        
                        <InputCheckbox @bind-Value="boolRes.Value" ></InputCheckbox>
                    </div>
                    break;
            }
        }       
        <button type="submit">Submit</button>        
    </EditForm>
</div>
@code{
    List<IInputForForm<object>> formItems = new();

    protected override async void OnInitialized()
    {
        var request = Http.CreateClient();
        string path = Path.Combine("https://localhost:44363/", "WeatherForecast");
        var responce = await request.GetAsync(path);  

        var options = new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            };
        var result = await responce.Content.ReadFromJsonAsync<List<InputDTO<object>>>(options);

        AddFormItem(result);

        InvokeAsync(StateHasChanged);
    }

    async Task SendForm()
    {
        var request = Http.CreateClient();
        string path = Path.Combine("https://localhost:44363/", "WeatherForecast", "PostForm");
        var options = new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            };
        var responce = await request.PostAsJsonAsync(path, formItems, options);
    }  

    void AddFormItem(List<InputDTO<object>> result)
    {   
        foreach (var obj in result)
        {
            switch (obj.Title)
            {
                case "RadioButton":
                    obj.Object = JsonSerializer.Deserialize<CheckInput>(obj.Object.ToString());
                    break;
                case "Date":
                    obj.Object = JsonSerializer.Deserialize<DateInput>(obj.Object.ToString());
                    break;
                case "TextInput":
                    obj.Object = JsonSerializer.Deserialize<TextInput>(obj.Object.ToString());
                    break;
            }
            formItems.Add(obj);
        }       
    }
}